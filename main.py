'''
Задача 10: На столе лежат n монеток. Некоторые из них лежат вверх решкой,
а некоторые – гербом. Определите минимальное число монеток, которые нужно перевернуть,
чтобы все монетки были повернуты вверх одной и той же стороной.
Выведите минимальное количество монет, которые нужно перевернуть.
5->10110
2

n = int(input("Введите количество монет:"))
count_eagle = 0
count_tails = 0
for i in range(n):
    x = int(
        input("Какой стороной лежит монета: если орел - введите 1, если решка - 0: "))
    if x > 1:
        print("Введен недопустимый символ.")
        x = int(
            input("Какой стороной лежит монета: если орел - введите 1, если решка - 0: "))
    if x == 1:
        count_eagle += 1
    elif x == 0:
        count_tails += 1
if count_eagle > count_tails:
    print(
        f"Необходимо перевернуть {count_tails} монеток, чтобы все монетки были вверх орлом.")
else:
    print(
        f"Необходимо перевернуть {count_eagle} монеток, чтобы все монетки были вверх решкой.")


Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. 
Петя помогает Кате по математике. Он задумывает два натуральных числа X и Y (X,Y≤1000), 
а Катя должна их отгадать. Для этого Петя делает две подсказки. Он называет сумму 
этих чисел S и их произведение P. Помогите Кате отгадать задуманные Петей числа.
4 4 -> 2 2 
5 6 -> 2 3


S = int(input("Введите сумму числа: "))
P = int(input("Введите произведение числа: "))
for x in range(1, 1001):
    y = S - x
    if y * x == P:
        print(f"Задуманные числа Петей: {x}, {y}")
        break
if y * x != P or y + x != S:
    print("Неправильно введенные данные!")


# Задача 14: Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.

N = int(input("Введите число N: "))
power_of_two = 1

while power_of_two <= N:
    print(power_of_two)
    power_of_two *= 2
'''
# Task 22.
# Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества.
# m — кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.
'''
n = int(input("Введите количество элементов в первом множестве: "))
m = int(input("Введите количество элементов во втором множестве: "))

list1 = []
for i in range(n):
    element = int(input(f"Введите элемент {i+1} первого множества: "))
    list1.append(element)

list2 = []
for i in range(m):
    element = int(input(f"Введите элемент {i+1} второго множества: "))
    list2.append(element)

# Находим общие элементы и выводим их в порядке возрастания
common_elements = []
for element in list1:
    if element in list2 and element not in common_elements:
        common_elements.append(element)

common_elements.sort()
print("Общие элементы в обоих множествах (в порядке возрастания):")
print(common_elements)

# Task 24:
# В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, # причём кусты высажены только по окружности.
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.# Эти кусты обладают разной урожайностью,
# поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из
# управляющего модуля и нескольких собирающих модулей. Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом,
# собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль,
# находясь перед некоторым кустом заданной во входном файле грядки.

N = int(input("Введите количество кустов черники: "))
berries = list(map(int, input(
    "Введите количество ягод на каждом кусте черники через пробел: ").split()))

max_berries = 0

for i in range(1, N - 1):

    collected_berries = berries[i] + berries[i - 1] + berries[i + 1]

    if collected_berries > max_berries:
        max_berries = collected_berries

print(max_berries)
'''
